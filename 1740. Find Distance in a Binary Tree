/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    int result = 0;
    
    public int FindDistance(TreeNode root, int p, int q) {
        if(p == q)
        {
            return 0;
        }
        
        DFS(root, p, q);
        return result;
    }
    
    public int DFS(TreeNode root, int p, int q) {
        if(root == null)
        {
            return 0;
        }
        
        var left = DFS(root.left, p, q);
        var right = DFS(root.right, p, q);
        
        //Found result
        if(left == -1 || right == -1)
        {
            return -1;
        }
        
        if(left > 0 && right > 0)
        {
            result = left + right;
            return -1;
        }
        
        // check both left & right.
        left += right;
        
        if(left > 0)
        {
            if(root.val == p || root.val == q)
            {
                result = left;
                return -1;
            }
            
            return left + 1;
        }                
        
        if(root.val == p || root.val == q)
        {
            return 1;
        }
        
        return 0;
    }    
}
